
import java.io.BufferedWriter;

public class Err {

    public  int errCount = 0;
    public static final String[] errInfo = new String[]{
            "",
            "1.Должно быть = вместо :=",
            "2.Нет числа после =",
            "3.Нет = после идентификатора",
            "4.const,var,procedure нет идентификатора после ключевых слов",
            "5.Отсутствует запятая или точка с запятой",
            "6.Неверный символ после описания процедуры",
            "7.Нет оператора",
            "8.Неверный символ после операторной части блока",
            "9.Нет точки в конце программы",
            "10.Пропущена точка с запятой между операторами",
            "11.Идентификатор не описан",
            "12.Недопустимое присваивание константе или процедуре",
            "13.Должно быть :=",
            "14.Нет идентификатора после call",
            "15.Вызов константы или переменной вместо процедуры",
            "16.Требуется then",
            "17.Требуется точка с запятой или end",
            "18.Требуется do",
            "19.Неверный символ после оператора",
            "20.Требуется сравнение",
            "21.Выражение содержит идентификатор процедуры",
            "22.Отсутствует правая скобка",
            "23.Неверный символ после множителя",
            "24.Неверный символ в начале выражения",
            "25.Слишком большое число",
            "26.Еще не объявлено",
            "27.Еще не объявлено",
            "28.Еще не объявлено",
            "29.Еще не объявлено",
            "30.Еще не объявлено",
            "31.Выход за границы",
            "32.Слишком большое количество вложенностей",
            "33.Отсутствует правая скобка",
            "34.Необходимы круглые скобки",
            "35.Переменная в read() не объявлена"
    };


    public  void report(int errcode,int line) {
        try {
            System.out.println("*** line( "+line+"):" + errInfo[errcode] + "  ***");
            PL0.errWriter.write("*** line ( "+line+"):"+ errInfo[errcode] + "  ***\n");
            errCount++;
        }catch(Exception e){
            e.printStackTrace();
            System.out.println("***Ошибка в выводе ошибок***");
        }

    }
}
